fetch('http://localhost:3000/api/users')
  .then((res) => res.json())
  .then((users) => {
    const current = localStorage.getItem('amnam_user');
    const user = users.find((u) => u.username === current);
    if (user && user.is_admin) {
      document.getElementById('adminPanel').classList.remove('hidden');
    }
  });

function giveProduct() {
  const username = document.getElementById('giveNick').value;
  const product = document.getElementById('giveProduct').value;
  fetch('http://localhost:3000/api/admin/give-product', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ username, product }),
  })
    .then((res) => res.json())
    .then((data) => alert(data.success ? 'Выдано' : data.error));
}

function giveAdmin() {
  const username = document.getElementById('adminNick').value;
  fetch('http://localhost:3000/api/admin/give-admin', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ username }),
  })
    .then((res) => res.json())
    .then((data) => alert(data.success ?齊Админ выдан' : data.error));
}

function blockUser() {
  const username = document.getElementById('banNick').value;
  fetch('http://localhost:3000/api/admin/block-user', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ username }),
  })
    .then((res) => res.json())
    .then((data) => alert(data.success ? 'Пользователь заблокирован' : data.error));
}

function generateKey() {
  const duration = document.getElementById('keyType').value;
  fetch('http://localhost:3000/api/admin/generate-key', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ duration }),
  })
    .then((res) => res.json())
    .then((data) => {
      if (data.key) document.getElementById('keyOutput').textContent = 'Ключ: ' + data.key;
      else alert(data.error);
    });
}
